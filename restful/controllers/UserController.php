<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2016/12/7
 * Time: 9:52
 */

namespace restful\controllers;

use common\helpers\Publics;
use common\models\User;
use Yii;
use yii\filters\auth\CompositeAuth;
use yii\filters\auth\HttpBearerAuth;
use yii\web\Response;

class UserController extends Base
{

    public function init()
    {
        $request = Yii::$app->request;

        $language = $request->getHeaders()->get('CLIENT-LANG') ? : 'en-US';
        $keys = ['zh-CN', 'zh-TW', 'pl-PL', 'pt-PT','en-US'];

        if(!in_array($language,$keys))
            $language = 'en-US';

        Yii::$app->language = $language;
    }

    public function behaviors()
    {
        $behaviors = parent::behaviors();

        $behaviors['contentNegotiator']['formats']['text/html'] = Response::FORMAT_JSON;
        $behaviors['authenticator'] = [
            'class' => CompositeAuth::className(),
            'authMethods' => [
                //HttpBasicAuth::className(),
                HttpBearerAuth::className(),
                //QueryParamAuth::className(),
            ],
            'except' => $this->exceptionalAuthenticationActions(),
        ];
        return $behaviors;
    }

    /**
     * 复写校验规则，添加白名单
     * @return array
     */
    protected function exceptionalAuthenticationActions()
    {
        return ['sign-in'];
        //return parent::exceptionalAuthenticationActions(); // TODO: Change the autogenerated stub
    }

    //kyc认证问题，以及返回答案
    public function actionKyc()
    {
        $kycVal = Yii::$app->user->identity->kyc;

        $publicCommon = new Publics();

        $faqInfo = $publicCommon::getFaqList();

        if ($kycVal) {

            $kycInfo = unserialize($kycVal);
            foreach ($faqInfo as &$val) {
                $val['answer'] = $kycInfo[$val['id']];
            }

        }

        $output['result'] = true;
        $output['message'] = Yii::t(Yii::$app->language, 'success');
        $output['eventCode'] = 1000;
        $output['data'] = $faqInfo;

        return $output;
    }

    //提交KYC认证
    public function actionKycSub()
    {
        $kycInfo = \Yii::$app->getRequest()->bodyParams;

        if (empty($kycInfo)) {

            return ['result' => false, 'message' => Yii::t(Yii::$app->language, 'Can\'t be empty'),'eventCode'=>1000];

        }

        $kycStr = serialize($kycInfo);

        $connection = Yii::$app->db;
        $upData['kyc'] = $kycStr;
        $authRel = $connection->createCommand()->update('{{%members}}', $upData, array('access_token' => Yii::$app->user->identity->access_token))->execute();

        if ($authRel===false) {
            return ['result' => false, 'message' => Yii::t(Yii::$app->language, 'fail'),'eventCode'=>1000];
        } else {
            return ['result' => true, 'message' => Yii::t(Yii::$app->language, 'success'),'eventCode'=>1000];
        }
    }

    //用户登录
    public function actionSignIn()
    {

        //校验信息用户中心回调的数据是否正确
        $publicCommon = new Publics();
        $decodeInfo = $publicCommon->checkUserAccountCenter();

        //如果有错误消息，直接返回
        if(isset($decodeInfo['msg']))
            return $decodeInfo;

        $model = User::findOne(['mid'=>$decodeInfo['user_id']]);

        if(!$model)$model = new User();

        $model->access_token = $model->generateAccessToken();

        $ip = $publicCommon->getIP();
        $model->login_time = time();
        $model->last_ip = ip2long($ip);
        $model->nick_name = $decodeInfo['nick_name'] ? : $decodeInfo['first_name'].' '.$decodeInfo['last_name'];
        $model->email = $decodeInfo['email'];
        $model->phone_number = $decodeInfo['cellphone'];
        $model->status = $model::STATUS_ACTIVE;
        $model->currency_symbol = "$";
        $model->currency = 'USD';
        $model->country = $decodeInfo['region_code'];
        $model->utm_source = $decodeInfo['utm_source'];

        if($model->mid)
            $model->updated_at = time();
        else{
            $model->created_at = time();
            $model->mid = $decodeInfo['user_id'];
            $model->member_type = User::REAL_USER;
        }

        $authRel = $model->save(false);

        $data = User::findOne(['mid'=>$decodeInfo['user_id']]);

        $userInfo['userInfo'] = $data;
        if (!$authRel){

            return ['result' => false, 'message' => Yii::t(Yii::$app->language, 'Failed to generate authentication of user.'),'eventCode'=>1000];

        }else{

            //token写入到cookie
            $model::writeCookie('access-token',$publicCommon->authCode($model->access_token,'ENCODE',Yii::$app->params['site.key']));

            return ['data' => $userInfo, 'message' => Yii::t(Yii::$app->language, 'success'), 'result' => true,'eventCode'=>1000];

        }

    }

    //用户修改个人信息
    public function actionSetInfo()
    {

        //校验信息用户中心回调的数据是否正确
        $publicCommon = new Publics();
        $decodeInfo = $publicCommon->checkUserAccountCenter();

        //如果有错误消息，直接返回
        if(isset($decodeInfo['msg']))
            return $decodeInfo;

        $changeFields = [
            'user_id'=>'mid','nick_name'=>'nick_name','email'=>'email',
            'cellphone'=>'phone_number','region_code'=>'country'
        ];

        $model = User::findOne(['mid'=>$decodeInfo['user_id']]);
        if(empty($model->mid)){
            return ['result' => false, 'message' => Yii::t(Yii::$app->language, 'Failed to generate authentication of user.'),'eventCode'=>1000];
        }

        foreach ($changeFields as $key=>$val){
            if($key=='nick_name'){
                $model->$val = $decodeInfo[$key] ? : $decodeInfo['first_name'].' '.$decodeInfo['last_name'];
            } else
                $model->$val = $decodeInfo[$key];
        }

        $model->save(false);

        return ['message' => Yii::t(Yii::$app->language, 'success'), 'result' => true,'eventCode'=>1000];

    }

    //用户退出登录
    public function actionLogOut()
    {
        $mid = Yii::$app->user->identity->mid;
        $model = User::findOne(['mid'=>$mid]);
        $model->access_token = '';

        $res = $model->save(false);
        if ($res) {

            $model::delCookie('access-token');
            return ['result' => true, 'message' => Yii::t(Yii::$app->language, 'success'),'eventCode'=>1000];

        } else {

            return ['result' => false, 'message' => Yii::t(Yii::$app->language, 'fail'),'eventCode'=>1000];

        }
    }

    //获取用户基本信息
    public function actionInfo(){
        $info = User::findByToken(Yii::$app->user->identity->access_token);
        $info['kyc'] = $info['kyc'] ? true : false;

        if(!$info){
            return ['result' => false, 'message' => Yii::t(Yii::$app->language, 'Parameter error'),'eventCode'=>1000];
        }else
            return ['data' => $info, 'message' => Yii::t(Yii::$app->language, 'success'), 'result' => true,'eventCode'=>1000];

    }
} 