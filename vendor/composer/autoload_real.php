<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitacdd766ff3fcdc2a1c7641639082e1ad
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        spl_autoload_register(array('ComposerAutoloaderInitacdd766ff3fcdc2a1c7641639082e1ad', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitacdd766ff3fcdc2a1c7641639082e1ad', 'loadClassLoader'));

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION');  // 5.6以上静态加载
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

            call_user_func(\Composer\Autoload\ComposerStaticInitacdd766ff3fcdc2a1c7641639082e1ad::getInitializer($loader));  // 获得各种规范
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);  // 注册 autoload 函数

        if ($useStaticLoader) {
            $includeFiles = Composer\Autoload\ComposerStaticInitacdd766ff3fcdc2a1c7641639082e1ad::$files;
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }

        foreach ($includeFiles as $fileIdentifier => $file) {  // 加载固有类
            composerRequireacdd766ff3fcdc2a1c7641639082e1ad($fileIdentifier, $file);
        }

        return $loader;
    }
}

function composerRequireacdd766ff3fcdc2a1c7641639082e1ad($fileIdentifier, $file)
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
